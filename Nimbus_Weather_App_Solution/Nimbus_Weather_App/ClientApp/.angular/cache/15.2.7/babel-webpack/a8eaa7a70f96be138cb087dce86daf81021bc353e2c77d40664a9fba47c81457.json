{"ast":null,"code":"import { WeatherApiService } from \"../../services/weather-api.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/weather-api.service\";\nimport * as i2 from \"@angular/common\";\nfunction ForecastDisplayComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Loading weather forecast... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForecastDisplayComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"h3\");\n    i0.ɵɵtext(3, \"Location\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\")(5, \"li\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"li\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"li\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"div\", 4)(12, \"h3\");\n    i0.ɵɵtext(13, \"Weather\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"ul\")(15, \"li\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"li\");\n    i0.ɵɵelement(18, \"img\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"li\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"Name: \", ctx_r1.forecastData.location.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Region: \", ctx_r1.forecastData.location.region, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Country: \", ctx_r1.forecastData.location.country, \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.forecastData.current[\"temp_c\"], \"\\u00B0C\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r1.forecastData.current.condition.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.forecastData.current.condition.text);\n  }\n}\nexport class ForecastDisplayComponent {\n  constructor(api) {\n    this.api = api;\n  }\n  ngOnInit() {\n    WeatherApiService.weatherUpdates.subscribe(data => {\n      this.forecastData = data;\n      console.log(data);\n    });\n    this.api.getWeather();\n  }\n}\nForecastDisplayComponent.ɵfac = function ForecastDisplayComponent_Factory(t) {\n  return new (t || ForecastDisplayComponent)(i0.ɵɵdirectiveInject(i1.WeatherApiService));\n};\nForecastDisplayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ForecastDisplayComponent,\n  selectors: [[\"forecast-display\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[\"id\", \"forecast-display\"], [4, \"ngIf\"], [\"class\", \"mainContainer\", 4, \"ngIf\"], [1, \"mainContainer\"], [1, \"containerSection\"], [3, \"src\"]],\n  template: function ForecastDisplayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ForecastDisplayComponent_div_1_Template, 2, 0, \"div\", 1);\n      i0.ɵɵtemplate(2, ForecastDisplayComponent_div_2_Template, 21, 6, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.forecastData);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forecastData && ctx.forecastData.isValid);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"#forecast-display[_ngcontent-%COMP%]\\r\\n{\\r\\n    padding: 1rem;\\r\\n    color: white;\\r\\n    font-size: 2rem;\\r\\n}\\r\\n\\r\\nh3[_ngcontent-%COMP%]\\r\\n{\\r\\n    font-size: 2.2rem;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\nli[_ngcontent-%COMP%]\\r\\n{\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\n.mainContainer[_ngcontent-%COMP%]\\r\\n{\\r\\n    margin-top: 12px;\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    gap: 25px;\\r\\n}\\r\\n\\r\\n.containerSection[_ngcontent-%COMP%]\\r\\n{\\r\\n    padding: 12px;\\r\\n    flex: 1;\\r\\n    background-color: rgba(255, 255, 255, 0.1);\\r\\n    border-radius: 12px;\\r\\n    box-shadow: 6px 6px 12px rgba(0, 0, 0, 0.3);\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.containerSection[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]\\r\\n{\\r\\n    width: 64px;\\r\\n    height: 64px;\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 800px)\\r\\n{\\r\\n    .mainContainer[_ngcontent-%COMP%]\\r\\n    {\\r\\n        flex-direction: column;\\r\\n    }\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9mb3JlY2FzdC1kaXNwbGF5L2ZvcmVjYXN0LWRpc3BsYXkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxhQUFhO0lBQ2IsWUFBWTtJQUNaLGVBQWU7QUFDbkI7O0FBRUE7O0lBRUksaUJBQWlCO0lBQ2pCLGlCQUFpQjtBQUNyQjs7QUFFQTs7SUFFSSxnQkFBZ0I7QUFDcEI7O0FBRUE7O0lBRUksZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsU0FBUztBQUNiOztBQUVBOztJQUVJLGFBQWE7SUFDYixPQUFPO0lBQ1AsMENBQTBDO0lBQzFDLG1CQUFtQjtJQUNuQiwyQ0FBMkM7SUFDM0Msa0JBQWtCO0FBQ3RCOztBQUVBOztJQUVJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBOztJQUVJOztRQUVJLHNCQUFzQjtJQUMxQjtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiI2ZvcmVjYXN0LWRpc3BsYXlcclxue1xyXG4gICAgcGFkZGluZzogMXJlbTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGZvbnQtc2l6ZTogMnJlbTtcclxufVxyXG5cclxuaDNcclxue1xyXG4gICAgZm9udC1zaXplOiAyLjJyZW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxubGlcclxue1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuLm1haW5Db250YWluZXJcclxue1xyXG4gICAgbWFyZ2luLXRvcDogMTJweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBnYXA6IDI1cHg7XHJcbn1cclxuXHJcbi5jb250YWluZXJTZWN0aW9uXHJcbntcclxuICAgIHBhZGRpbmc6IDEycHg7XHJcbiAgICBmbGV4OiAxO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuICAgIGJveC1zaGFkb3c6IDZweCA2cHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5jb250YWluZXJTZWN0aW9uIGltZ1xyXG57XHJcbiAgICB3aWR0aDogNjRweDtcclxuICAgIGhlaWdodDogNjRweDtcclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweClcclxue1xyXG4gICAgLm1haW5Db250YWluZXJcclxuICAgIHtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,iBAAiB,QAAQ,oCAAoC;;;;;;ICApEC,2BAA2B;IACzBA,6CACF;IAAAA,iBAAM;;;;;IAENA,8BAAwE;IAEhEA,wBAAQ;IAAAA,iBAAK;IACjBA,0BAAI;IACEA,YAAsC;IAAAA,iBAAK;IAC/CA,0BAAI;IAAAA,YAA0C;IAAAA,iBAAK;IACnDA,0BAAI;IAAAA,aAA4C;IAAAA,iBAAK;IAGzDA,+BAA8B;IACxBA,wBAAO;IAAAA,iBAAK;IAChBA,2BAAI;IACEA,aAAsC;IAAAA,iBAAK;IAC/CA,2BAAI;IACFA,0BAEE;IACJA,iBAAK;IACLA,2BAAI;IAAAA,aAAyC;IAAAA,iBAAK;;;;IAd9CA,eAAsC;IAAtCA,sEAAsC;IACtCA,eAA0C;IAA1CA,0EAA0C;IAC1CA,eAA4C;IAA5CA,4EAA4C;IAM5CA,eAAsC;IAAtCA,2EAAsC;IAEnCA,eAC2C;IAD3CA,6FAC2C;IAG9CA,eAAyC;IAAzCA,gEAAyC;;;ADfrD,OAAM,MAAOC,wBAAwB;EAKnCC,YAAoBC,GAAsB;IAAtB,QAAG,GAAHA,GAAG;EAAuB;EAE9CC,QAAQ;IAENL,iBAAiB,CAACM,cAAc,CAACC,SAAS,CAAEC,IAAI,IAAI;MAElD,IAAI,CAACC,YAAY,GAAGD,IAAI;MACxBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC,CAAC;IAEF,IAAI,CAACJ,GAAG,CAACQ,UAAU,EAAE;EACvB;;AAhBWV,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRrChB,8BAA2B;MACzBA,yEAEM;MAENA,0EAqBM;MACRA,iBAAM;;;MA1BEA,eAAmB;MAAnBA,wCAAmB;MAIGA,eAA0C;MAA1CA,mEAA0C","names":["WeatherApiService","i0","ForecastDisplayComponent","constructor","api","ngOnInit","weatherUpdates","subscribe","data","forecastData","console","log","getWeather","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["F:\\Dev\\Web Dev Projects\\ASP.NET\\Nimbus_Weather_App\\Nimbus_Weather_App\\Nimbus_Weather_App_Solution\\Nimbus_Weather_App\\ClientApp\\src\\app\\components\\forecast-display\\forecast-display.component.ts","F:\\Dev\\Web Dev Projects\\ASP.NET\\Nimbus_Weather_App\\Nimbus_Weather_App\\Nimbus_Weather_App_Solution\\Nimbus_Weather_App\\ClientApp\\src\\app\\components\\forecast-display\\forecast-display.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WeatherApiService } from \"../../services/weather-api.service\";\r\n\n@Component({\n  selector: 'forecast-display',\n  templateUrl: './forecast-display.component.html',\n  styleUrls: ['./forecast-display.component.css']\n})\nexport class ForecastDisplayComponent\r\n{\n\n  public forecastData: any;\n\n  constructor(private api: WeatherApiService) { }\n\n  ngOnInit()\n  {\n    WeatherApiService.weatherUpdates.subscribe((data) =>\r\n    {\r\n      this.forecastData = data;\r\n      console.log(data);\r\n    });\r\n\r\n    this.api.getWeather();\r\n  }\n\n}\n","<div id=\"forecast-display\">\r\n  <div *ngIf=\"!forecastData\">\r\n    Loading weather forecast...\r\n  </div>\r\n\r\n  <div class=\"mainContainer\" *ngIf=\"forecastData && forecastData.isValid\">\r\n    <div class=\"containerSection\">\r\n      <h3>Location</h3>\r\n      <ul>\r\n        <li>Name: {{ forecastData.location.name }}</li>\r\n        <li>Region: {{ forecastData.location.region }}</li>\r\n        <li>Country: {{ forecastData.location.country }}</li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"containerSection\">\r\n      <h3>Weather</h3>\r\n      <ul>\r\n        <li>{{ forecastData.current['temp_c'] }}°C</li>\r\n        <li>\r\n          <img src=\r\n               \"{{ forecastData.current.condition.icon }}\"\r\n          />\r\n        </li>\r\n        <li>{{ forecastData.current.condition.text }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}