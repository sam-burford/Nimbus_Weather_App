{"ast":null,"code":"import { HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class MainHttpInterceptor {\n  intercept(request, next) {\n    return next.handle(request).pipe(catchError(error => {\n      if (error instanceof HttpErrorResponse) {\n        // Handle HTTP errors (e.g., status code, error message)\n        console.error('HTTP Error:', error.status, error.message);\n      } else {\n        // Handle other errors (e.g., network errors)\n        console.error('Network Error:', error);\n      }\n      throw error; // Re-throw the error to propagate it to subscribers\n    }));\n  }\n}\n\nMainHttpInterceptor.ɵfac = function MainHttpInterceptor_Factory(t) {\n  return new (t || MainHttpInterceptor)();\n};\nMainHttpInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MainHttpInterceptor,\n  factory: MainHttpInterceptor.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAMEA,iBAAiB,QACZ,sBAAsB;AAC7B,SAAqBC,UAAU,QAAQ,MAAM;;AAG7C,OAAM,MAAOC,mBAAmB;EAE9BC,SAAS,CACPC,OAAyB,EACzBC,IAAiB;IAGjB,OAAOA,IAAI,CAACC,MAAM,CAACF,OAAO,CAAC,CAACG,IAAI,CAC9BN,UAAU,CAAEO,KAAU,IAAI;MAExB,IAAIA,KAAK,YAAYR,iBAAiB,EACtC;QACE;QACAS,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAACE,MAAM,EAAEF,KAAK,CAACG,OAAO,CAAC;OAC1D,MACD;QACE;QACAF,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;;MAGxC,MAAMA,KAAK,CAAC,CAAC;IACf,CAAC,CAAC,CACH;EACH;;;AAvBWN,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAU,SAAnBV,mBAAmB;AAAA","names":["HttpErrorResponse","catchError","MainHttpInterceptor","intercept","request","next","handle","pipe","error","console","status","message","factory"],"sourceRoot":"","sources":["F:\\Dev\\Web Dev Projects\\ASP.NET\\Nimbus_Weather_App\\Nimbus_Weather_App\\Nimbus_Weather_App_Solution\\Nimbus_Weather_App\\ClientApp\\src\\app\\services\\main-interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport\r\n{\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable, catchError } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class MainHttpInterceptor implements HttpInterceptor\r\n{\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>>\r\n  {\r\n    return next.handle(request).pipe(\r\n      catchError((error: any) =>\r\n      {\r\n        if (error instanceof HttpErrorResponse)\r\n        {\r\n          // Handle HTTP errors (e.g., status code, error message)\r\n          console.error('HTTP Error:', error.status, error.message);\r\n        } else\r\n        {\r\n          // Handle other errors (e.g., network errors)\r\n          console.error('Network Error:', error);\r\n        }\r\n\r\n        throw error; // Re-throw the error to propagate it to subscribers\r\n      })\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}