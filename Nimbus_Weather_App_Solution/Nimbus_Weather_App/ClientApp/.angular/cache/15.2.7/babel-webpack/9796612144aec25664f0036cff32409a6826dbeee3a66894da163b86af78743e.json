{"ast":null,"code":"import { WeatherApiService } from \"../../services/weather-api.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/weather-api.service\";\nimport * as i2 from \"@angular/common\";\nexport class ForecastDisplayComponent {\n  constructor(api) {\n    this.api = api;\n  }\n  /**\r\n   * Retrieves the Observable for weather updates.\r\n   * @returns\r\n   */\n  getWeatherUpdates() {\n    return WeatherApiService.weatherUpdates;\n  }\n}\nForecastDisplayComponent.ɵfac = function ForecastDisplayComponent_Factory(t) {\n  return new (t || ForecastDisplayComponent)(i0.ɵɵdirectiveInject(i1.WeatherApiService));\n};\nForecastDisplayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ForecastDisplayComponent,\n  selectors: [[\"forecast-display\"]],\n  decls: 9,\n  vars: 3,\n  consts: [[\"id\", \"forecast-display\"]],\n  template: function ForecastDisplayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \"Location\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"ul\")(4, \"li\");\n      i0.ɵɵtext(5);\n      i0.ɵɵpipe(6, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"h3\");\n      i0.ɵɵtext(8, \"Weather\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 1, ctx.getWeatherUpdates()));\n    }\n  },\n  dependencies: [i2.AsyncPipe],\n  styles: [\"#forecast-display[_ngcontent-%COMP%]\\r\\n{\\r\\n    padding: 1rem;\\r\\n    color: white;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9mb3JlY2FzdC1kaXNwbGF5L2ZvcmVjYXN0LWRpc3BsYXkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxhQUFhO0lBQ2IsWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIiNmb3JlY2FzdC1kaXNwbGF5XHJcbntcclxuICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,iBAAiB,QAAQ,oCAAoC;;;;AAOtE,OAAM,MAAOC,wBAAwB;EAGnCC,YAAoBC,GAAsB;IAAtB,QAAG,GAAHA,GAAG;EAAuB;EAE9C;;;;EAIAC,iBAAiB;IAEf,OAAOJ,iBAAiB,CAACK,cAAc;EACzC;;AAZWJ,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAK;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRrCC,8BAA2B;MACrBA,wBAAQ;MAAAA,iBAAK;MACjBA,0BAAI;MACEA,YAAiC;;MAAAA,iBAAK;MAE5CA,0BAAI;MAAAA,uBAAO;MAAAA,iBAAK;;;MAFVA,eAAiC;MAAjCA,mEAAiC","names":["WeatherApiService","ForecastDisplayComponent","constructor","api","getWeatherUpdates","weatherUpdates","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["F:\\Dev\\Web Dev Projects\\ASP.NET\\Nimbus_Weather_App\\Nimbus_Weather_App\\Nimbus_Weather_App_Solution\\Nimbus_Weather_App\\ClientApp\\src\\app\\components\\forecast-display\\forecast-display.component.ts","F:\\Dev\\Web Dev Projects\\ASP.NET\\Nimbus_Weather_App\\Nimbus_Weather_App\\Nimbus_Weather_App_Solution\\Nimbus_Weather_App\\ClientApp\\src\\app\\components\\forecast-display\\forecast-display.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WeatherApiService } from \"../../services/weather-api.service\";\r\n\n@Component({\n  selector: 'forecast-display',\n  templateUrl: './forecast-display.component.html',\n  styleUrls: ['./forecast-display.component.css']\n})\nexport class ForecastDisplayComponent\r\n{\n\n  constructor(private api: WeatherApiService) { }\n\n  /**\r\n   * Retrieves the Observable for weather updates. \n   * @returns\r\n   */\r\n  getWeatherUpdates()\n  {\n    return WeatherApiService.weatherUpdates;\r\n  }\n\n}\n","<div id=\"forecast-display\">\r\n  <h3>Location</h3>\r\n  <ul>\r\n    <li>{{ getWeatherUpdates() | async }}</li>\r\n  </ul>\r\n  <h3>Weather</h3>\r\n\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}