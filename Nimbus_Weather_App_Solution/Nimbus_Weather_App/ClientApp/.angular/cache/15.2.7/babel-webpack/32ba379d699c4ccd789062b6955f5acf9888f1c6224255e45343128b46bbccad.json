{"ast":null,"code":"import { WeatherApiService } from \"../../services/weather-api.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/weather-api.service\";\nimport * as i2 from \"@angular/common\";\nfunction ForecastDisplayComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.forecastData.current[\"temp_c\"]);\n  }\n}\nexport class ForecastDisplayComponent {\n  constructor(api) {\n    this.api = api;\n  }\n  ngOnInit() {\n    WeatherApiService.weatherUpdates.subscribe(data => {\n      this.forecastData = data;\n    });\n  }\n}\nForecastDisplayComponent.ɵfac = function ForecastDisplayComponent_Factory(t) {\n  return new (t || ForecastDisplayComponent)(i0.ɵɵdirectiveInject(i1.WeatherApiService));\n};\nForecastDisplayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ForecastDisplayComponent,\n  selectors: [[\"forecast-display\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[\"id\", \"forecast-display\"], [4, \"ngIf\"]],\n  template: function ForecastDisplayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \"Location\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"ul\");\n      i0.ɵɵtemplate(4, ForecastDisplayComponent_li_4_Template, 2, 1, \"li\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"h3\");\n      i0.ɵɵtext(6, \"Weather\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.forecastData);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"#forecast-display[_ngcontent-%COMP%]\\r\\n{\\r\\n    padding: 1rem;\\r\\n    color: white;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9mb3JlY2FzdC1kaXNwbGF5L2ZvcmVjYXN0LWRpc3BsYXkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxhQUFhO0lBQ2IsWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIiNmb3JlY2FzdC1kaXNwbGF5XHJcbntcclxuICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,iBAAiB,QAAQ,oCAAoC;;;;;;ICElEC,0BAAyB;IAAAA,YAAoC;IAAAA,iBAAK;;;;IAAzCA,eAAoC;IAApCA,2DAAoC;;;ADKjE,OAAM,MAAOC,wBAAwB;EAKnCC,YAAoBC,GAAsB;IAAtB,QAAG,GAAHA,GAAG;EAAuB;EAE9CC,QAAQ;IAENL,iBAAiB,CAACM,cAAc,CAACC,SAAS,CAAEC,IAAI,IAAI;MAElD,IAAI,CAACC,YAAY,GAAGD,IAAI;IAC1B,CAAC,CAAC;EACJ;;AAbWN,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRrCb,8BAA2B;MACrBA,wBAAQ;MAAAA,iBAAK;MACjBA,0BAAI;MACFA,uEAAkE;MACpEA,iBAAK;MACLA,0BAAI;MAAAA,uBAAO;MAAAA,iBAAK;;;MAFTA,eAAkB;MAAlBA,uCAAkB","names":["WeatherApiService","i0","ForecastDisplayComponent","constructor","api","ngOnInit","weatherUpdates","subscribe","data","forecastData","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["F:\\Dev\\Web Dev Projects\\ASP.NET\\Nimbus_Weather_App\\Nimbus_Weather_App\\Nimbus_Weather_App_Solution\\Nimbus_Weather_App\\ClientApp\\src\\app\\components\\forecast-display\\forecast-display.component.ts","F:\\Dev\\Web Dev Projects\\ASP.NET\\Nimbus_Weather_App\\Nimbus_Weather_App\\Nimbus_Weather_App_Solution\\Nimbus_Weather_App\\ClientApp\\src\\app\\components\\forecast-display\\forecast-display.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WeatherApiService } from \"../../services/weather-api.service\";\r\n\n@Component({\n  selector: 'forecast-display',\n  templateUrl: './forecast-display.component.html',\n  styleUrls: ['./forecast-display.component.css']\n})\nexport class ForecastDisplayComponent\r\n{\n\n  public forecastData: any;\n\n  constructor(private api: WeatherApiService) { }\n\n  ngOnInit()\n  {\n    WeatherApiService.weatherUpdates.subscribe((data) =>\r\n    {\r\n      this.forecastData = data;\r\n    });\r\n  }\n\n}\n","<div id=\"forecast-display\">\r\n  <h3>Location</h3>\r\n  <ul>\r\n    <li *ngIf=\"forecastData\">{{ forecastData.current['temp_c'] }}</li>\r\n  </ul>\r\n  <h3>Weather</h3>\r\n\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}